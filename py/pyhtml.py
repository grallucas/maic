import inspect
import textwrap

_ELEMS_WITHOUT_CLOSING = 'hr img link meta br'.split()
_ELEMS_ONELINE = 'p a h1 h2 h3 h4 h5 h6 title b i'.split()

def _html_element(html_name, has_closing, *children, **tags):
    if 'style' in tags and tags['style'] == '':
        del tags['style']
    tags = ' '.join(f'{"class" if k == "class_" else k}="{v}"' for k,v in tags.items())

    if children and not has_closing:
        raise Exception(f'Element {html_name} cannot have children')
        
    ret = f'<{html_name}{" " if tags else ""}{tags}>'
    is_oneline = html_name in _ELEMS_ONELINE and len(children) <= 1
    cond_nl = '' if is_oneline else '\n'
    cond_tab = '' if is_oneline else '    '
    if children:
        ret +=  cond_nl + '\n'.join([textwrap.indent(c, cond_tab) for c in children]) + cond_nl
    if has_closing:
        ret += f'</{html_name}>'
    if html_name == 'html':
        ret = '<!-- HTML Generated By Script -->\n<!DOCTYPE html>\n' + ret
    return ret

def _html_element_from_func(*children, **tags):
    html_name = inspect.currentframe().f_back.f_code.co_name
    has_ending = html_name not in _ELEMS_WITHOUT_CLOSING
    return _html_element(html_name, has_ending, *children, **tags)

def html(*children, **tags): return _html_element_from_func(*children, **tags)
def head(*children, **tags): return _html_element_from_func(*children, **tags)
def body(*children, **tags): return _html_element_from_func(*children, **tags)
def style(*children, **tags): return _html_element_from_func(*children, **tags)
def script(*children, **tags): return _html_element_from_func(*children, **tags)
def title(*children, **tags): return _html_element_from_func(*children, **tags)
def link(*children, **tags): return _html_element_from_func(*children, **tags)
def meta(*children, **tags): return _html_element_from_func(*children, **tags)

def div(*children, **tags): return _html_element_from_func(*children, **tags)
def span(*children, **tags): return _html_element_from_func(*children, **tags)

def b(*children, **tags): return _html_element_from_func(*children, **tags)
def i(*children, **tags): return _html_element_from_func(*children, **tags)
def a(*children, **tags): return _html_element_from_func(*children, **tags)
def button(*children, **tags): return _html_element_from_func(*children, **tags)

def p(*children, **tags): return _html_element_from_func(*children, **tags)
def h1(*children, **tags): return _html_element_from_func(*children, **tags)
def h2(*children, **tags): return _html_element_from_func(*children, **tags)
def h3(*children, **tags): return _html_element_from_func(*children, **tags)
def h4(*children, **tags): return _html_element_from_func(*children, **tags)
def h5(*children, **tags): return _html_element_from_func(*children, **tags)
def h6(*children, **tags): return _html_element_from_func(*children, **tags)

def hr(*children, **tags): return _html_element_from_func(*children, **tags)
def br(*children, **tags): return _html_element_from_func(*children, **tags)

def img(*children, **tags): return _html_element_from_func(*children, **tags)
def canvas(*children, **tags): return _html_element_from_func(*children, **tags)

def elems(*xs):
    return '\n'.join([
        elems(*list(x)) if type(x) == type(_ for _ in []) else
        elems(*x) if type(x) == list else
        x
        for x in xs
    ])